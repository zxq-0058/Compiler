Starting parse
Entering state 0
Reading a token: Next token is token TYPE (1.1-2: )
Shifting token TYPE (1.1-2: )
Entering state 3
Reducing stack by rule 15 (line 135):
   $1 = token TYPE (1.1-2: )
-> $$ = nterm Specifier (1.1-2: )
Stack now 0
Entering state 8
Reading a token: Next token is token ID (1.5: )
Shifting token ID (1.5: )
Entering state 20
Reading a token: Next token is token TYPE (2.1-2: )
Reducing stack by rule 23 (line 162):
   $1 = token ID (1.5: )
-> $$ = nterm VarDec (1.5: )
Stack now 0 8
Entering state 22
Next token is token TYPE (2.1-2: )
Shifting token error (2.1-2: )
Entering state 29
Next token is token TYPE (2.1-2: )
Reducing stack by rule 14 (line 128):
   $1 = nterm VarDec (1.5: )
   $2 = token error (2.1-2: )
-> $$ = nterm ExtDecList (1.5-2.2: )
Stack now 0 8
Entering state 21
Next token is token TYPE (2.1-2: )
Error: discarding token TYPE (2.1-2: )
Shifting token error (2.1-2: )
Entering state 27
Reducing stack by rule 8 (line 102):
   $1 = nterm Specifier (1.1-2: )
   $2 = nterm ExtDecList (1.5-2.2: )
   $3 = token error (2.1-2: )
-> $$ = nterm ExtDef (1.1-2.2: )
Stack now 0
Entering state 7
Reading a token: Next token is token ID (2.5: )
Shifting token error (2.5: )
Entering state 1
Next token is token ID (2.5: )
Error: discarding token ID (2.5: )
Error: popping token error (2.5: )
Stack now 0 7
Shifting token error (2.5: )
Entering state 1
Reading a token: Now at end of input.
Cleanup: discarding lookahead token $end (2.5: )
Stack now 0 7 1
Cleanup: popping token error (2.5: )
Cleanup: popping nterm ExtDef (1.1-2.2: )
